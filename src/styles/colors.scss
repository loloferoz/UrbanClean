@use '@angular/material' as mat;

@mixin theme-colors($theme) {
  --md-sys-color-primary: #{mat.get-theme-color($theme, primary)};
  --md-sys-color-on-primary: #{mat.get-theme-color($theme, on-primary)};
  --md-sys-color-primary-container: #{mat.get-theme-color(
      $theme,
      primary-container
    )};
  --md-sys-color-on-primary-container: #{mat.get-theme-color(
      $theme,
      on-primary-container
    )};
  --md-sys-color-primary-fixed: #{mat.get-theme-color($theme, primary-fixed)};
  --md-sys-color-primary-fixed-dim: #{mat.get-theme-color(
      $theme,
      primary-fixed-dim
    )};
  --md-sys-color-on-primary-fixed: #{mat.get-theme-color(
      $theme,
      on-primary-fixed
    )};
  --md-sys-color-on-primary-fixed-variant: #{mat.get-theme-color(
      $theme,
      on-primary-fixed-variant
    )};

  --md-sys-color-secondary: #{mat.get-theme-color($theme, secondary)};
  --md-sys-color-on-secondary: #{mat.get-theme-color($theme, on-secondary)};
  --md-sys-color-secondary-container: #{mat.get-theme-color(
      $theme,
      secondary-container
    )};
  --md-sys-color-on-secondary-container: #{mat.get-theme-color(
      $theme,
      on-secondary-container
    )};
  --md-sys-color-secondary-fixed: #{mat.get-theme-color(
      $theme,
      secondary-fixed
    )};
  --md-sys-color-secondary-fixed-dim: #{mat.get-theme-color(
      $theme,
      secondary-fixed-dim
    )};
  --md-sys-color-on-secondary-fixed: #{mat.get-theme-color(
      $theme,
      on-secondary-fixed
    )};
  --md-sys-color-on-secondary-fixed-variant: #{mat.get-theme-color(
      $theme,
      on-secondary-fixed-variant
    )};

  --md-sys-color-tertiary: #{mat.get-theme-color($theme, tertiary)};
  --md-sys-color-on-tertiary: #{mat.get-theme-color($theme, on-tertiary)};
  --md-sys-color-tertiary-container: #{mat.get-theme-color(
      $theme,
      tertiary-container
    )};
  --md-sys-color-on-tertiary-container: #{mat.get-theme-color(
      $theme,
      on-tertiary-container
    )};
  --md-sys-color-tertiary-fixed: #{mat.get-theme-color($theme, tertiary-fixed)};
  --md-sys-color-tertiary-fixed-dim: #{mat.get-theme-color(
      $theme,
      tertiary-fixed-dim
    )};
  --md-sys-color-on-tertiary-fixed: #{mat.get-theme-color(
      $theme,
      on-tertiary-fixed
    )};
  --md-sys-color-on-tertiary-fixed-variant: #{mat.get-theme-color(
      $theme,
      on-tertiary-fixed-variant
    )};

  --md-sys-color-error: #{mat.get-theme-color($theme, error)};
  --md-sys-color-on-error: #{mat.get-theme-color($theme, on-error)};
  --md-sys-color-error-container: #{mat.get-theme-color(
      $theme,
      error-container
    )};
  --md-sys-color-on-error-container: #{mat.get-theme-color(
      $theme,
      on-error-container
    )};

  --md-sys-color-surface: #{mat.get-theme-color($theme, surface)};
  --md-sys-color-surface-dim: #{mat.get-theme-color($theme, surface-dim)};
  --md-sys-color-surface-bright: #{mat.get-theme-color($theme, surface-bright)};
  --md-sys-color-surface-container-lowest: #{mat.get-theme-color(
      $theme,
      surface-container-lowest
    )};
  --md-sys-color-surface-container-low: #{mat.get-theme-color(
      $theme,
      surface-container-low
    )};
  --md-sys-color-surface-container: #{mat.get-theme-color(
      $theme,
      surface-container
    )};
  --md-sys-color-surface-container-high: #{mat.get-theme-color(
      $theme,
      surface-container-high
    )};
  --md-sys-color-surface-container-highest: #{mat.get-theme-color(
      $theme,
      surface-container-highest
    )};
  --md-sys-color-on-surface: #{mat.get-theme-color($theme, on-surface)};
  --md-sys-color-on-surface-variant: #{mat.get-theme-color(
      $theme,
      on-surface-variant
    )};

  --md-sys-color-outline: #{mat.get-theme-color($theme, outline)};
  --md-sys-color-outline-variant: #{mat.get-theme-color(
      $theme,
      outline-variant
    )};

  --md-sys-color-inverse-surface: #{mat.get-theme-color(
      $theme,
      inverse-surface
    )};
  --md-sys-color-inverse-on-surface: #{mat.get-theme-color(
      $theme,
      inverse-on-surface
    )};
  --md-sys-color-inverse-primary: #{mat.get-theme-color(
      $theme,
      inverse-primary
    )};

  --md-sys-color-scrim: #{mat.get-theme-color($theme, scrim)};
  --md-sys-color-shadow: #{mat.get-theme-color($theme, shadow)};
}
